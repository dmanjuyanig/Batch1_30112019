<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="15" total="21" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="16503" started-at="2019-12-03T12:53:29Z" finished-at="2019-12-03T12:53:45Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="16503" started-at="2019-12-03T12:53:29Z" finished-at="2019-12-03T12:53:45Z">
      <class name="TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config@14cd1699]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-12-03T12:53:35Z" finished-at="2019-12-03T12:53:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config@14cd1699]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2019-12-03T12:53:35Z" finished-at="2019-12-03T12:53:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config.RetriveCustomerWithValidSecretKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="RetriveCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config@14cd1699]" name="RetriveCustomerWithValidSecretKey" duration-ms="2258" started-at="2019-12-03T12:53:35Z" finished-at="2019-12-03T12:53:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RetriveCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config@14cd1699]" name="afterMethod" is-config="true" duration-ms="100" started-at="2019-12-03T12:53:37Z" finished-at="2019-12-03T12:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RetriveCustomerWithValidSecretKey status=SUCCESS method=RetriveCustomer_Config.RetriveCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config@14cd1699] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCasesScript_Using_ConfigProperties.RetriveCustomer_Config -->
      <class name="TestCasesScript_Using_ConfigProperties.CreateCustomer_Config">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305]" name="beforeSuite" is-config="true" duration-ms="1002" started-at="2019-12-03T12:53:28Z" finished-at="2019-12-03T12:53:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305]" name="beforeTest" is-config="true" duration-ms="0" started-at="2019-12-03T12:53:29Z" finished-at="2019-12-03T12:53:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305]" name="beforeClass" is-config="true" duration-ms="7" started-at="2019-12-03T12:53:29Z" finished-at="2019-12-03T12:53:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-12-03T12:53:29Z" finished-at="2019-12-03T12:53:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCasesScript_Using_ConfigProperties.CreateCustomer_Config.CreateCustomerValidSecretKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="CreateCustomerValidSecretKey()[pri:1, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305]" name="CreateCustomerValidSecretKey" duration-ms="5362" started-at="2019-12-03T12:53:29Z" finished-at="2019-12-03T12:53:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateCustomerValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305]" name="afterMethod" is-config="true" duration-ms="842" started-at="2019-12-03T12:53:34Z" finished-at="2019-12-03T12:53:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateCustomerValidSecretKey status=SUCCESS method=CreateCustomer_Config.CreateCustomerValidSecretKey()[pri:1, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestCasesScript_Using_ConfigProperties.CreateCustomer_Config@76505305]" name="afterSuite" is-config="true" duration-ms="1" started-at="2019-12-03T12:53:45Z" finished-at="2019-12-03T12:53:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCasesScript_Using_ConfigProperties.CreateCustomer_Config -->
      <class name="TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config@77888435]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-12-03T12:53:38Z" finished-at="2019-12-03T12:53:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config@77888435]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-12-03T12:53:38Z" finished-at="2019-12-03T12:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config.DeleteCustomerWithValidSecretKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="DeleteCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config@77888435]" name="DeleteCustomerWithValidSecretKey" duration-ms="2005" started-at="2019-12-03T12:53:38Z" finished-at="2019-12-03T12:53:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config@77888435]" name="afterMethod" is-config="true" duration-ms="110" started-at="2019-12-03T12:53:40Z" finished-at="2019-12-03T12:53:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteCustomerWithValidSecretKey status=SUCCESS method=DeleteCustomer_Config.DeleteCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config@77888435] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCasesScript_Using_ConfigProperties.DeleteCustomer_Config -->
      <class name="TestCasesScript_Using_HashMap.RetriveCustomer_Map">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCasesScript_Using_HashMap.RetriveCustomer_Map@71d44a3]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-12-03T12:53:41Z" finished-at="2019-12-03T12:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCasesScript_Using_HashMap.RetriveCustomer_Map@71d44a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-12-03T12:53:41Z" finished-at="2019-12-03T12:53:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCasesScript_Using_HashMap.RetriveCustomer_Map.RetriveCustomerWithValidSecretKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="RetriveCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_HashMap.RetriveCustomer_Map@71d44a3]" name="RetriveCustomerWithValidSecretKey" duration-ms="2493" started-at="2019-12-03T12:53:41Z" finished-at="2019-12-03T12:53:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RetriveCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCasesScript_Using_HashMap.RetriveCustomer_Map@71d44a3]" name="afterMethod" is-config="true" duration-ms="86" started-at="2019-12-03T12:53:44Z" finished-at="2019-12-03T12:53:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RetriveCustomerWithValidSecretKey status=SUCCESS method=RetriveCustomer_Map.RetriveCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_HashMap.RetriveCustomer_Map@71d44a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCasesScript_Using_HashMap.RetriveCustomer_Map -->
      <class name="TestCasesScript_Using_HashMap.CreateCustomer_Map">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCasesScript_Using_HashMap.CreateCustomer_Map@73a1e9a9]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-12-03T12:53:40Z" finished-at="2019-12-03T12:53:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCasesScript_Using_HashMap.CreateCustomer_Map@73a1e9a9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-12-03T12:53:40Z" finished-at="2019-12-03T12:53:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCasesScript_Using_HashMap.CreateCustomer_Map.CreateCustomerValidSecretKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="CreateCustomerValidSecretKey()[pri:1, instance:TestCasesScript_Using_HashMap.CreateCustomer_Map@73a1e9a9]" name="CreateCustomerValidSecretKey" duration-ms="1336" started-at="2019-12-03T12:53:40Z" finished-at="2019-12-03T12:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateCustomerValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCasesScript_Using_HashMap.CreateCustomer_Map@73a1e9a9]" name="afterMethod" is-config="true" duration-ms="76" started-at="2019-12-03T12:53:41Z" finished-at="2019-12-03T12:53:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateCustomerValidSecretKey status=SUCCESS method=CreateCustomer_Map.CreateCustomerValidSecretKey()[pri:1, instance:TestCasesScript_Using_HashMap.CreateCustomer_Map@73a1e9a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCasesScript_Using_HashMap.CreateCustomer_Map -->
      <class name="TestCasesScript_Using_HashMap.DeleteCustomer_Map">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCasesScript_Using_HashMap.DeleteCustomer_Map@7b98f307]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-12-03T12:53:44Z" finished-at="2019-12-03T12:53:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="DeleteCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_HashMap.DeleteCustomer_Map@7b98f307]" name="DeleteCustomerWithValidSecretKey" duration-ms="1672" started-at="2019-12-03T12:53:44Z" finished-at="2019-12-03T12:53:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCasesScript_Using_HashMap.DeleteCustomer_Map@7b98f307]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-12-03T12:53:44Z" finished-at="2019-12-03T12:53:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCasesScript_Using_HashMap.DeleteCustomer_Map.DeleteCustomerWithValidSecretKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCasesScript_Using_HashMap.DeleteCustomer_Map@7b98f307]" name="afterMethod" is-config="true" duration-ms="87" started-at="2019-12-03T12:53:45Z" finished-at="2019-12-03T12:53:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteCustomerWithValidSecretKey status=SUCCESS method=DeleteCustomer_Map.DeleteCustomerWithValidSecretKey()[pri:1, instance:TestCasesScript_Using_HashMap.DeleteCustomer_Map@7b98f307] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCasesScript_Using_HashMap.DeleteCustomer_Map -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
